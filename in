#! /bin/bash -eu
set -o pipefail

DEST_DIR="$1"

echo "DEST_DIR is $DEST_DIR [$1]"

GIT_DEST_DIR="$(mktemp -d -t git-resource-destination.XXXXXX)"

/opt/resource/git/in "$GIT_DEST_DIR"

cd "$GIT_DEST_DIR"

[[ -f build.gradle ]] || { echo "There is no build.gradle in the project root" >&2; exit 1; }
[[ -x gradlew ]] || { echo "There is no gradle wrapper in the project root" >&2; exit 1; }

cat >>build.gradle <<-EOF
  allprojects {
    task __cacheDependencies << {
      def ignore = [
        'apiElements',
        'implementation',
        'runtimeElements',
        'runtimeOnly',
        'testImplementation',
        'testRuntimeOnly'
      ]
      configurations.forEach {
      println "Files $it"
      if( !ignore.contains(it.name) ){
        it.files
      }
    }
  }
EOF

./gradlew __cacheDependencies >&2

cp -a ~/.gradle "$DEST_DIR/"

echo "Cached $(du -hs "$DEST_DIR/" | cut -f 1) in $(find "$DEST_DIR/" -type f | wc -l) files" >&2
